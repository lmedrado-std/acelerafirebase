
'use server';

import { ai } from '@/ai/genkit';
import {
  GenerateQuizInputSchema,
  GenerateQuizOutputSchema,
  type GenerateQuizInput,
  type GenerateQuizOutput
} from '@/lib/types';

export async function generateQuiz(input: GenerateQuizInput): Promise<GenerateQuizOutput> {
  return generateQuizFlow(input);
}

const prompt = ai.definePrompt({
  name: 'generateQuizPrompt',
  input: { schema: GenerateQuizInputSchema },
  output: { schema: GenerateQuizOutputSchema },
  prompt: `
Voc√™ √© um coach de vendas criativo e exigente, especializado em cal√ßados. Crie um QUIZ desafiador e diversificado com base no tema "{{topic}}".

- Gere EXATAMENTE {{numberOfQuestions}} perguntas.
- O n√≠vel de dificuldade √© "{{difficulty}}". Adapte as perguntas e as op√ß√µes de resposta para este n√≠vel.
- Use o identificador √∫nico de gera√ß√£o (seed): {{#if seed}}{{seed}}{{else}}geral{{/if}} para garantir a unicidade.

Regras R√çGIDAS:
1. Gere perguntas √∫nicas e variadas com base no seed.
2. Evite repetir qualquer pergunta feita para outros vendedores no mesmo dia.
3. N√£o use estrutura semelhante entre as perguntas (ex: todas come√ßando com "Qual √©...").
4. Cubra √°reas distintas do tema (ex: produto, abordagem, obje√ß√µes, KPIs, psicologia do cliente, tend√™ncias de mercado).
5. Responda APENAS com JSON. N√£o inclua blocos de c√≥digo ou explica√ß√µes externas.

Instru√ß√µes por N√≠vel de Dificuldade:

**N√≠vel "F√°cil":**
- Perguntas devem ser diretas, focadas em conceitos b√°sicos e fundamentais de vendas e produtos de cal√ßados.
- As op√ß√µes de resposta devem ter uma alternativa claramente correta e as demais devem ser obviamente incorretas ou distantes do tema.
- Exemplo: "Qual a principal fun√ß√£o de um bom atendimento ao cliente?"

**N√≠vel "M√©dio":**
- Perguntas devem exigir um pouco mais de racioc√≠nio e aplica√ß√£o de conceitos.
- Inclua cen√°rios comuns do dia a dia de vendas de cal√ßados.
- As op√ß√µes de resposta devem ser mais plaus√≠veis, exigindo um conhecimento mais aprofundado para identificar a correta.
- Exemplo: "Um cliente est√° indeciso entre dois modelos de t√™nis. Qual a melhor estrat√©gia para ajud√°-lo a decidir, focando em suas necessidades?"

**N√≠vel "Dif√≠cil":**
- Perguntas devem ser complexas, envolvendo an√°lise cr√≠tica, resolu√ß√£o de problemas e aplica√ß√£o de estrat√©gias avan√ßadas.
- Inclua cen√°rios desafiadores, obje√ß√µes dif√≠ceis ou situa√ß√µes que exigem conhecimento de mercado e psicologia do consumidor.
- As op√ß√µes de resposta devem ser muito pr√≥ximas, exigindo um entendimento nuances e experi√™ncia pr√°tica para escolher a melhor.
- Exemplo: "Em um cen√°rio de baixa sazonalidade, como um vendedor de cal√ßados pode utilizar t√©cnicas de cross-selling e up-selling para maximizar o ticket m√©dio, sem parecer agressivo, e qual KPI seria mais impactado por essa estrat√©gia?"

Formato da resposta:
{
  "title": "Quiz Exclusivo - N√≠vel {{difficulty}}",
  "questions": [
    {
      "questionText": "Um cliente diz: 'Achei caro'. Qual a MELHOR resposta para contornar essa obje√ß√£o sem dar desconto?",
      "options": [
        "Concordar e mostrar um mais barato",
        "Explicar que o pre√ßo √© justo",
        "Perguntar 'Caro em rela√ß√£o a qu√™?' e focar no valor e benef√≠cios do produto",
        "Dizer que a qualidade tem seu pre√ßo"
      ],
      "correctAnswerIndex": 2,
      "explanation": "Focar no valor (durabilidade, conforto, tecnologia) justifica o pre√ßo e desvia o foco do custo."
    }
  ]
}
`,
  config: {
    safetySettings: [
      { category: 'HARM_CATEGORY_HATE_SPEECH', threshold: 'BLOCK_NONE' },
      { category: 'HARM_CATEGORY_DANGEROUS_CONTENT', threshold: 'BLOCK_NONE' },
      { category: 'HARM_CATEGORY_HARASSMENT', threshold: 'BLOCK_NONE' },
      { category: 'HARM_CATEGORY_SEXUALLY_EXPLICIT', threshold: 'BLOCK_NONE' },
    ],
  },
});

const fallbackQuizzes: GenerateQuizOutput[] = [
  {
    title: "Quiz de T√©cnicas de Venda - B√°sico",
    questions: [
      { questionText: "Qual a melhor forma de abordar um cliente?", options: ["Esperar que ele fale primeiro", "Cumprimentar com simpatia e oferecer ajuda", "Segui-lo silenciosamente", "Falar das promo√ß√µes imediatamente"], correctAnswerIndex: 1, explanation: "Uma abordagem simp√°tica cria conex√£o e confian√ßa." },
      { questionText: "O que caracteriza uma boa venda consultiva?", options: ["Oferecer o item mais caro", "Entender a necessidade do cliente", "Focar apenas na comiss√£o", "Falar sobre todos os produtos da loja"], correctAnswerIndex: 1, explanation: "Na venda consultiva, voc√™ ajuda o cliente com a melhor solu√ß√£o." },
      { questionText: "Para um cliente que busca conforto, qual tipo de palmilha voc√™ recomenda?", options: ["Plana e dura", "Com espuma de mem√≥ria (Memory Foam)", "De borracha simples", "Nenhuma"], correctAnswerIndex: 1, explanation: "A espuma de mem√≥ria se molda ao p√©, oferecendo m√°ximo conforto e absor√ß√£o de impacto." },
      { questionText: "Um cliente reclama que o sapato de couro est√° apertado. O que voc√™ diz?", options: ["Que ele vai lacear com o tempo", "Que ele pegou o n√∫mero errado", "Oferece um produto para lacear o couro e explica o processo", "Sugere um modelo sint√©tico"], correctAnswerIndex: 2, explanation: "Oferecer uma solu√ß√£o proativa demonstra conhecimento e cuidado com o cliente, agregando valor." },
      { questionText: "O que √© 'PA' em vendas de varejo?", options: ["Produto por Atendimento", "Pagamento Aprovado", "Pre√ßo de Atacado", "Promo√ß√£o Ativa"], correctAnswerIndex: 0, explanation: "PA (Pe√ßas por Atendimento) √© um indicador que mede a quantidade de produtos vendidos por cliente atendido." }
    ]
  },
  {
    title: "Quiz de Obje√ß√µes de Clientes - Intermedi√°rio",
    questions: [
        { questionText: "Se um cliente diz 'Vou pensar', qual √© a melhor atitude?", options: ["Deix√°-lo ir embora", "Perguntar 'O que te impede de decidir agora?' para entender a d√∫vida.", "Oferecer um desconto para fechar na hora", "Anotar o contato dele"], correctAnswerIndex: 1, explanation: "Entender a obje√ß√£o real por tr√°s do 'vou pensar' √© a chave para contorn√°-la." },
        { questionText: "Um cliente achou o mesmo produto mais barato online. O que voc√™ destaca?", options: ["O pre√ßo da concorr√™ncia", "A garantia, o atendimento pessoal e a possibilidade de troca f√°cil na loja f√≠sica.", "Que comprar online √© arriscado", "Que voc√™ pode cobrir a oferta"], correctAnswerIndex: 1, explanation: "Agregar valor ao servi√ßo da loja f√≠sica justifica a diferen√ßa de pre√ßo." },
        { questionText: "O que fazer se um cliente est√° indeciso entre dois modelos?", options: ["Escolher pelo cliente", "Deix√°-lo sozinho para n√£o pressionar", "Resumir os pr√≥s e contras de cada um com base no que ele precisa.", "Mostrar um terceiro modelo"], correctAnswerIndex: 2, explanation: "Ajudar o cliente a organizar as ideias com base em suas pr√≥prias necessidades facilita a decis√£o." },
        { questionText: "Qual indicador de performance (KPI) mede a efici√™ncia em vender mais de um item por vez?", options: ["Ticket M√©dio", "Taxa de Convers√£o", "PA (Pe√ßas por Atendimento)", "Margem de Lucro"], correctAnswerIndex: 2, explanation: "O PA (Pe√ßas por Atendimento) mede exatamente a quantidade de produtos vendidos por cliente." },
        { questionText: "O cliente diz 'N√£o conhe√ßo essa marca'. Qual o seu primeiro passo?", options: ["Mostrar uma marca famosa", "Falar da hist√≥ria da marca e seus diferenciais de qualidade.", "Dizer que √© uma marca nova", "Oferecer um desconto por ser desconhecida"], correctAnswerIndex: 1, explanation: "Apresentar a marca e seus pontos fortes constr√≥i confian√ßa no produto." }
    ]
  }
];

const getFallbackQuiz = (): GenerateQuizOutput => {
  const randomIndex = Math.floor(Math.random() * fallbackQuizzes.length);
  return fallbackQuizzes[randomIndex];
};

const generateQuizFlow = ai.defineFlow(
  {
    name: 'generateQuizFlow',
    inputSchema: GenerateQuizInputSchema,
    outputSchema: GenerateQuizOutputSchema,
  },
  async (input) => {
    try {
      const response = await prompt(input);
      console.log("üì§ Resposta da IA:", response);

      if (response.output) {
        if (response.output.questions.length === 0) {
           throw new Error("AI returned a valid structure but with no questions.");
        }
        return response.output;
      }

      const rawText = response.text || '';
      const jsonRegex = /```json\n([\s\S]*?)\n```|({[\s\S]*})/;
      const match = rawText.match(jsonRegex);
      const jsonString = match?.[1] || match?.[2];

      if (!jsonString) throw new Error('JSON inv√°lido ou ausente');

      const parsed = JSON.parse(jsonString);
      const validated = GenerateQuizOutputSchema.parse(parsed);
      
      if (validated.questions.length === 0) {
        throw new Error("AI returned a valid structure but with no questions after parsing.");
      }
      return validated;

    } catch (error) {
      console.warn('‚ö†Ô∏è Erro ao gerar quiz com a IA:', error);
      console.warn('üìÑ Retornando fallback local');
      return getFallbackQuiz();
    }
  }
);
